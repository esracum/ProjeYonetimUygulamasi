<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>